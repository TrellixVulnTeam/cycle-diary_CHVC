{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { SIGNUP_SUCCESS, SIGNUP_FAIL, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from \"./types\";\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post(\"http://localhost:8000/api/token/\", body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Authenticated successfully\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: LOGIN_FAIL\n    });\n    dispatch(setAlert(\"Error Authenticating\", \"error\"));\n  }\n};\nexport const signup = ({\n  name,\n  email,\n  password,\n  password2\n}) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password,\n    password2\n  });\n\n  try {\n    const res = await axios.post(\"http://localhost:8000/api/accounts/signup\", body, config);\n    dispatch({\n      type: SIGNUP_SUCCESS,\n      payload: res.data\n    });\n    dispatch(login(email, password));\n  } catch (err) {\n    dispatch({\n      type: SIGNUP_FAIL\n    });\n    dispatch(setAlert(\"Error Authenticating\", \"error\"));\n  }\n};\nexport const logout = () => dispatch => {\n  dispatch(setAlert(\"logout successful.\", \"success\"));\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"sources":["/Users/jaewoocho/Desktop/Cycle Diary/frontend/src/actions/auth.js"],"names":["axios","setAlert","SIGNUP_SUCCESS","SIGNUP_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","login","email","password","dispatch","config","headers","body","JSON","stringify","res","post","type","payload","data","err","signup","name","password2","logout"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SACEC,cADF,EAEEC,WAFF,EAGEC,aAHF,EAIEC,UAJF,EAKEC,MALF,QAMO,SANP;AAQA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IAAoB;AAC5D,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;AAKA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEP,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAf,CAAb;;AAEA,MAAI;AACF,UAAMO,GAAG,GAAG,MAAMhB,KAAK,CAACiB,IAAN,CAChB,kCADgB,EAEhBJ,IAFgB,EAGhBF,MAHgB,CAAlB;AAMAD,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEd,aADC;AAEPe,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAIAV,IAAAA,QAAQ,CAACT,QAAQ,CAAC,4BAAD,EAA+B,SAA/B,CAAT,CAAR;AACD,GAZD,CAYE,OAAOoB,GAAP,EAAY;AACZX,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEb;AADC,KAAD,CAAR;AAGAK,IAAAA,QAAQ,CAACT,QAAQ,CAAC,sBAAD,EAAyB,OAAzB,CAAT,CAAR;AACD;AACF,CA1BM;AA4BP,OAAO,MAAMqB,MAAM,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQf,EAAAA,KAAR;AAAeC,EAAAA,QAAf;AAAyBe,EAAAA;AAAzB,CAAD,KAA0C,OAC9Dd,QAD8D,KAE3D;AACH,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;AAMA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEQ,IAAAA,IAAF;AAAQf,IAAAA,KAAR;AAAeC,IAAAA,QAAf;AAAyBe,IAAAA;AAAzB,GAAf,CAAb;;AAEA,MAAI;AACF,UAAMR,GAAG,GAAG,MAAMhB,KAAK,CAACiB,IAAN,CAChB,2CADgB,EAEhBJ,IAFgB,EAGhBF,MAHgB,CAAlB;AAMAD,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEhB,cADC;AAEPiB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAIAV,IAAAA,QAAQ,CAACH,KAAK,CAACC,KAAD,EAAQC,QAAR,CAAN,CAAR;AACD,GAZD,CAYE,OAAOY,GAAP,EAAY;AACZX,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEf;AADC,KAAD,CAAR;AAGAO,IAAAA,QAAQ,CAACT,QAAQ,CAAC,sBAAD,EAAyB,OAAzB,CAAT,CAAR;AACD;AACF,CA7BM;AA+BP,OAAO,MAAMwB,MAAM,GAAG,MAAOf,QAAD,IAAc;AACxCA,EAAAA,QAAQ,CAACT,QAAQ,CAAC,oBAAD,EAAuB,SAAvB,CAAT,CAAR;AACAS,EAAAA,QAAQ,CAAC;AAAEQ,IAAAA,IAAI,EAAEZ;AAAR,GAAD,CAAR;AACD,CAHM","sourcesContent":["import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport {\n  SIGNUP_SUCCESS,\n  SIGNUP_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n} from \"./types\";\n\nexport const login = (email, password) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const body = JSON.stringify({ email, password });\n\n  try {\n    const res = await axios.post(\n      \"http://localhost:8000/api/token/\",\n      body,\n      config\n    );\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data,\n    });\n    dispatch(setAlert(\"Authenticated successfully\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: LOGIN_FAIL,\n    });\n    dispatch(setAlert(\"Error Authenticating\", \"error\"));\n  }\n};\n\nexport const signup = ({ name, email, password, password2 }) => async (\n  dispatch\n) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const body = JSON.stringify({ name, email, password, password2 });\n\n  try {\n    const res = await axios.post(\n      \"http://localhost:8000/api/accounts/signup\",\n      body,\n      config\n    );\n\n    dispatch({\n      type: SIGNUP_SUCCESS,\n      payload: res.data,\n    });\n    dispatch(login(email, password));\n  } catch (err) {\n    dispatch({\n      type: SIGNUP_FAIL,\n    });\n    dispatch(setAlert(\"Error Authenticating\", \"error\"));\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  dispatch(setAlert(\"logout successful.\", \"success\"));\n  dispatch({ type: LOGOUT });\n};\n"]},"metadata":{},"sourceType":"module"}